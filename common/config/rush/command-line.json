/**
 * This configuration file defines custom commands for the "rush" command-line.
 * More documentation is available on the Rush website: https://rushjs.io
 */
{
  "$schema": "https://developer.microsoft.com/json-schemas/rush/v5/command-line.schema.json",
  "phases": [
    {
      "name": "_phase:lint",
      "ignoreMissingScript": true,
      "allowWarningsOnSuccess": false
    },
    {
      // Required phase
      "name": "_phase:build",
      "dependencies": {
        "upstream": ["_phase:build"]
      },
      "ignoreMissingScript": false,
      "allowWarningsOnSuccess": false
    },
    {
      "name": "_phase:test",
      "dependencies": {
        "self": ["_phase:build"]
      },
      "ignoreMissingScript": true,
      "allowWarningsOnSuccess": false
    }
  ],
  "commands": [
    {
      "commandKind": "phased",
      "name": "lint",
      "summary": "Run linter on packages using phase block",
      "phases": ["_phase:lint"],
      "enableParallelism": true,
      "incremental": true
    },
    {
      "commandKind": "phased",
      "name": "build",
      "summary": "Build packages using phase block",
      "phases": ["_phase:lint", "_phase:build"],
      "enableParallelism": true,
      "incremental": true
    },
    {
      "commandKind": "phased",
      "name": "rebuild",
      "summary": "Rebuild packages using phase block",
      "phases": ["_phase:lint", "_phase:build"],
      "enableParallelism": true,
      "incremental": false
    },
    {
      "commandKind": "phased",
      "name": "test",
      "summary": "Test packages using phase block",
      "phases": ["_phase:lint", "_phase:build", "_phase:test"],
      "enableParallelism": true,
      "incremental": true
    },
    {
      "commandKind": "phased",
      "name": "retest",
      "summary": "Retest packages using phase block",
      "phases": ["_phase:lint", "_phase:build", "_phase:test"],
      "enableParallelism": true,
      "incremental": false
    },
    {
      "commandKind": "bulk",
      "name": "clean",
      "summary": "Clean packages using phase block",
      "enableParallelism": false,
      "incremental": false,
      "ignoreMissingScript": true,
      "ignoreDependencyOrder": true
    },
    {
      "commandKind": "global",
      "name": "hooks:format",
      "summary": "Used by the pre-commit Git hook. This command invokes code styles to reformat staged changes.",
      "autoinstallerName": "rush-lintstaged",
      "shellCommand": "sh common/autoinstallers/rush-lintstaged/index.sh"
    },
    {
      "commandKind": "global",
      "name": "hooks:commitlint",
      "summary": "Used by the commit-msg Git hook. This command invokes linting commit message.",
      "autoinstallerName": "rush-commitlint",
      "shellCommand": "sh common/autoinstallers/rush-commitlint/lint.sh"
    },
    {
      "commandKind": "global",
      "name": "docs:v1",
      "summary": "invokes api-extractor to create document markdown.",
      "autoinstallerName": "rush-api-documenter",
      "shellCommand": "sh common/autoinstallers/rush-api-documenter/index.sh"
    },
    {
      "commandKind": "global",
      "name": "docs:v2",
      "summary": "invokes typedocs to create document markdown.",
      "autoinstallerName": "rush-api-documenter",
      "shellCommand": "sh common/autoinstallers/rush-api-documenter/index-v2.sh"
    },
    {
      "commandKind": "global",
      "name": "upgrade",
      "summary": "Upgrade dependencies of each packages (including autoinstallers)",
      "autoinstallerName": "rush-dependencies-updater",
      "shellCommand": "sh common/autoinstallers/rush-dependencies-updater/index.sh"
    },
    {
      "commandKind": "global",
      "name": "commit",
      "summary": "Create git commit with conventional syntax",
      "safeForSimultaneousRushProcesses": true,
      "autoinstallerName": "rush-commitlint",
      "shellCommand": "sh common/autoinstallers/rush-commitlint/commit.sh"
    }
  ],

  /**
   * Custom "parameters" introduce new parameters for specified Rush command-line commands.
   * For example, you might define a "--production" parameter for the "rush build" command.
   */
  "parameters": [
    {
      "parameterKind": "flag",
      "longName": "--interactive",
      "shortName": "-i",
      "description": "Interactively select which packages to upgrade.",
      "associatedCommands": ["upgrade"]
    },
    {
      "parameterKind": "choice",
      "longName": "--target",
      "shortName": "-t",
      "description": "Determines the version to upgrade to: latest, newest, greatest, minor, patch. (default: minor)",
      "defaultValue": "latest",
      "alternatives": [
        {
          "name": "latest",
          "description": "Upgrades to the latest version of the package."
        },
        {
          "name": "newest",
          "description": "Upgrades to the newest version of the package."
        },
        {
          "name": "greatest",
          "description": "Upgrades to the greatest version of the package."
        },
        {
          "name": "minor",
          "description": "Upgrades to the latest minor version of the package."
        },
        {
          "name": "patch",
          "description": "Upgrades to the latest patch version of the package."
        }
      ],
      "associatedCommands": ["upgrade"]
    },
    {
      "parameterKind": "string",
      "longName": "--edit",
      "shortName": "-e",
      "argumentName": "MESSAGE",
      "description": "Commit message to verify on commitlint",
      "required": false,
      "associatedCommands": ["hooks:commitlint"]
    }
  ]
}
